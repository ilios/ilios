language: php
services: mysql
sudo: false

matrix:
  fast_finish: true
  allow_failures:
  exclude:
    - php: "5.4"
    - php: "5.6"
  include:
    - php: "5.4"
      env: TEST_PHPUNIT_OTHERS=true
    - php: "5.4"
      env: TEST_PHPUNIT_CONTROLLERSA=true
    - php: "5.4"
      env: TEST_PHPUNIT_CONTROLLERSB=true
    - php: "5.4"
      env: TEST_PHPUNIT_MESH_DATA_IMPORT=true
    - php: "5.4"
      env: VALIDATE_SCHEMA=true
    - php: "5.4"
      env: CHECK_CODING_STANDARDS=true

    - php: "5.6"
      env: TEST_PHPUNIT_OTHERS=true
    - php: "5.6"
      env: TEST_PHPUNIT_CONTROLLERSA=true
    - php: "5.6"
      env: TEST_PHPUNIT_CONTROLLERSB=true
php:
  - "5.4"
  - "5.6"

env:
  matrix:
    - TEST_PHPUNIT_CONTROLLERSA=true
    - TEST_PHPUNIT_CONTROLLERSB=true
    - TEST_PHPUNIT_OTHERS=true
    - TEST_PHPUNIT_MESH_DATA_IMPORT=true
    - VALIDATE_SCHEMA=true
    - CHECK_CODING_STANDARDS=true
cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - mysql -e "create database IF NOT EXISTS ilios;" -uroot
#install apc extension so composer production install will run
  - if [ $(phpenv version-name) = 5.4 ]; then echo "extension=apc.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini; fi
  - if [ $(phpenv version-name) = 5.6 ]; then echo yes | pecl install apcu-4.0.10; fi
#increase our PHP memory limit so test coverage will work
  - echo "memory_limit=2048M" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
#install ldap extension so composer install will run
  - echo "extension=ldap.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - cp ${TRAVIS_BUILD_DIR}/app/config/parameters.yml.travis ${TRAVIS_BUILD_DIR}/app/config/parameters.yml
#install the symfony security checker
  - if [ "$CHECK_CODING_STANDARDS" ]; then wget http://get.sensiolabs.org/security-checker.phar -O security-checker.phar; fi
  - php -m
install:
    #Install production first this will fail if production dependencies are messed up
  - SYMFONY_ENV=prod composer install --no-interaction --no-dev --prefer-dist
    #Next do a real composer install to fill out our testing dependencies
  - composer install --no-interaction --prefer-dist -d ${TRAVIS_BUILD_DIR}

before_script:
#initialize symfony mysql db
  - bin/console doctrine:database:drop --force --env=dev
  - bin/console doctrine:database:create --env=dev
  - bin/console doctrine:migrations:migrate  --env=dev --no-interaction

script:
  - if [ "$VALIDATE_SCHEMA" = true ]; then (bin/console doctrine:schema:validate --env=dev); fi
  - if [ "$CHECK_CODING_STANDARDS" = true ]; then (bin/phpcs --standard=app/phpcs.xml src); fi
  - if [ "$CHECK_CODING_STANDARDS" = true ]; then (php security-checker.phar security:check); fi
  - if [ "$TEST_PHPUNIT_MESH_DATA_IMPORT" = true ]; then (bin/phpunit -c phpunit.xml.dist --group mesh_data_import); fi
  - if [ "$TEST_PHPUNIT_CONTROLLERSA" = true ]; then (bin/phpunit -c phpunit.xml.dist --group controllers_a); fi
  - if [ "$TEST_PHPUNIT_CONTROLLERSB" = true ]; then (bin/phpunit -c phpunit.xml.dist --group controllers_b); fi
  - if [ "$TEST_PHPUNIT_OTHERS" = true ]; then (bin/phpunit -c phpunit.xml.dist --exclude-group mesh_data_import,controllers_a,controllers_b); fi

#encrypted the IRC room chat.freenode.net##ilios so that it doesn't run on pull requests
notifications:
  irc:
    secure: "LN3o6qWNjtQepmrtRTEpFUoa9jFar6l5CDw1pwYzLSJOWc+q59tzbXyoKUlGat9/z+s79euUz2Pcg8XF0fotBwNKArPUOHH2Ti74JbZXNkEstPxgNe5CVqRkwvjlDvMeCJPOqxoc1xD6Ss/XNc5Tu414aIym2Zd4mJ0utmyBOUA="
