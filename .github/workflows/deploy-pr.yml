name: Deploy Pull Request

on:
  pull_request_target:
    types: [labeled]

jobs:
  deploy-docker-containers:
    name: Deploy Docker (preview-pr-${{github.event.number}})
    if: contains(github.event.pull_request.labels.*.name, 'safe to deploy')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - php-apache
          - nginx
          - fpm
          - fpm-dev
          - admin
          - update-frontend
          - consume-messages
          - mysql
          - mysql-demo
          - opensearch
          - redis
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:latest
        platforms: linux/amd64,linux/arm64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: zorgbort
        password: ${{ secrets.ZORGBORT_DOCKER_TOKEN }}
    - name: ${{ matrix.image }} (preview-pr-${{github.event.number}})
      uses: docker/build-push-action@v4
      with:
        tags: |
            ilios/${{ matrix.image }}:preview-pr-${{github.event.number}}
        build-args: ILIOS_VERSION=3.0.0-dev
        target: ${{ matrix.image }}
        push: true
        provenance: false #https://github.com/gabrieldemarmiesse/python-on-whales/issues/407
        platforms: linux/amd64,linux/arm64
  comment:
    runs-on: ubuntu-latest
    needs: deploy-docker-containers
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "PR deployed to docker for all containers, you can access with the tag `preview-pr-${{github.event.number}}`"
            })